{"ast":null,"code":"var _jsxFileName = \"/Users/julee/Desktop/Project_3/create-react-express/client/src/components/components/Chat/MessageList.js\";\nimport React from 'react';\nimport MDSpinner from 'react-md-spinner';\nß;\n\nclass MessageList extends React.Component {\n  render() {\n    const {\n      isLoading,\n      messages,\n      user\n    } = this.props;\n    let chatContent = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loading-messages-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MDSpinner, {\n      size: \"100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"loading-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }\n    }, \"Loading Messages\"));\n\n    if (!isLoading && !messages.length) {\n      chatContent = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center img-fluid empty-chat\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"empty-chat-holder\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: emptyChatImage,\n        className: \"img-res\",\n        alt: \"empty chat\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }\n      }, \" No new message? \"), /*#__PURE__*/React.createElement(\"h6\", {\n        className: \"empty-chat-sub-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }\n      }, \"Send your first message below.\")));\n    } else if (!isLoading && messages.length) {\n      chatContent = messages.map(message => {\n        if (this.props.renderMessage) {\n          return this.props.renderMessage(message);\n        } else {\n          let isUser = user.uid === message.sender.uid;\n          let renderName;\n\n          if (isUser) {\n            renderName = null;\n          } else {\n            renderName = /*#__PURE__*/React.createElement(\"div\", {\n              className: \"sender-name\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 26\n              }\n            }, message.sender.name);\n          }\n\n          return /*#__PURE__*/React.createElement(\"div\", {\n            key: message.id,\n            className: \"chat-bubble-row\",\n            style: {\n              flexDirection: isUser ? 'row-reverse' : 'row'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: message.sender.avatar,\n            alt: \"sender avatar\",\n            className: \"avatar\",\n            style: isUser ? {\n              marginLeft: '15px'\n            } : {\n              marginRight: '15px'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }\n          }), /*#__PURE__*/React.createElement(\"div\", {\n            className: `chat-bubble ${isUser ? 'is-user' : 'is-other'}`,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }\n          }, renderName, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"message\",\n            style: {\n              color: isUser ? '#FFF' : '#2D313F'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }\n          }, message.text)));\n        }\n      });\n    }\n\n    return chatContent;\n  }\n\n}\n\nexport default MessageList;","map":{"version":3,"sources":["/Users/julee/Desktop/Project_3/create-react-express/client/src/components/components/Chat/MessageList.js"],"names":["React","MDSpinner","ß","MessageList","Component","render","isLoading","messages","user","props","chatContent","length","emptyChatImage","map","message","renderMessage","isUser","uid","sender","renderName","name","id","flexDirection","avatar","marginLeft","marginRight","color","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAAyCC,CAAC;;AAE1C,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAA0C;AACxCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAACC,MAAAA,SAAD;AAAYC,MAAAA,QAAZ;AAAsBC,MAAAA;AAAtB,QAA8B,KAAKC,KAAzC;AAEA,QAAIC,WAAW,gBACb;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,CADF;;AAOA,QAAI,CAACJ,SAAD,IAAc,CAACC,QAAQ,CAACI,MAA5B,EAAoC;AAClCD,MAAAA,WAAW,gBACT;AAAK,QAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,GAAG,EAAEE,cAAV;AAA0B,QAAA,SAAS,EAAC,SAApC;AAA8C,QAAA,GAAG,EAAC,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,eAEE;AAAI,QAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAFF,CALF,CADF;AAcD,KAfD,MAeO,IAAI,CAACN,SAAD,IAAcC,QAAQ,CAACI,MAA3B,EAAmC;AACxCD,MAAAA,WAAW,GAAGH,QAAQ,CAACM,GAAT,CAAaC,OAAO,IAAI;AACpC,YAAI,KAAKL,KAAL,CAAWM,aAAf,EAA6B;AAC3B,iBAAO,KAAKN,KAAL,CAAWM,aAAX,CAAyBD,OAAzB,CAAP;AACD,SAFD,MAGK;AACH,cAAIE,MAAM,GAAGR,IAAI,CAACS,GAAL,KAAaH,OAAO,CAACI,MAAR,CAAeD,GAAzC;AACA,cAAIE,UAAJ;;AACA,cAAIH,MAAJ,EAAY;AACVG,YAAAA,UAAU,GAAG,IAAb;AACD,WAFD,MAEO;AACLA,YAAAA,UAAU,gBAAG;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA8BL,OAAO,CAACI,MAAR,CAAeE,IAA7C,CAAb;AACD;;AACD,8BACE;AACE,YAAA,GAAG,EAAEN,OAAO,CAACO,EADf;AAEE,YAAA,SAAS,EAAC,iBAFZ;AAGE,YAAA,KAAK,EAAE;AAACC,cAAAA,aAAa,EAAEN,MAAM,GAAG,aAAH,GAAmB;AAAzC,aAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAIE;AACE,YAAA,GAAG,EAAEF,OAAO,CAACI,MAAR,CAAeK,MADtB;AAEE,YAAA,GAAG,EAAC,eAFN;AAGE,YAAA,SAAS,EAAC,QAHZ;AAIE,YAAA,KAAK,EAAEP,MAAM,GAAG;AAACQ,cAAAA,UAAU,EAAE;AAAb,aAAH,GAA0B;AAACC,cAAAA,WAAW,EAAE;AAAd,aAJzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAUE;AAAK,YAAA,SAAS,EAAG,eAAcT,MAAM,GAAG,SAAH,GAAe,UAAW,EAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGG,UADH,eAEE;AACE,YAAA,SAAS,EAAC,SADZ;AAEE,YAAA,KAAK,EAAE;AAACO,cAAAA,KAAK,EAAEV,MAAM,GAAG,MAAH,GAAY;AAA1B,aAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAGGF,OAAO,CAACa,IAHX,CAFF,CAVF,CADF;AAqBD;AACF,OAlCa,CAAd;AAmCD;;AACD,WAAOjB,WAAP;AACD;;AAhEuC;;AAmE1C,eAAeP,WAAf","sourcesContent":["import React from 'react';\nimport MDSpinner from 'react-md-spinner';ß\n\nclass MessageList extends React.Component {\n  render() {\n    const {isLoading, messages, user} = this.props;\n\n    let chatContent = (\n      <div className='loading-messages-container'>\n        <MDSpinner size='100' />\n        <span className='loading-text'>Loading Messages</span>\n      </div>\n    );\n\n    if (!isLoading && !messages.length) {\n      chatContent = (\n        <div className='text-center img-fluid empty-chat'>\n          <div className='empty-chat-holder'>\n            <img src={emptyChatImage} className='img-res' alt='empty chat' />\n          </div>\n\n          <div>\n            <h2> No new message? </h2>\n            <h6 className='empty-chat-sub-title'>\n              Send your first message below.\n            </h6>\n          </div>\n        </div>\n      );\n    } else if (!isLoading && messages.length) {\n      chatContent = messages.map(message => {\n        if (this.props.renderMessage){\n          return this.props.renderMessage(message);\n        }\n        else {\n          let isUser = user.uid === message.sender.uid;\n          let renderName;\n          if (isUser) {\n            renderName = null;\n          } else {\n            renderName = <div className='sender-name'>{message.sender.name}</div>;\n          }\n          return (\n            <div\n              key={message.id}\n              className='chat-bubble-row'\n              style={{flexDirection: isUser ? 'row-reverse' : 'row'}}>\n              <img\n                src={message.sender.avatar}\n                alt='sender avatar'\n                className='avatar'\n                style={isUser ? {marginLeft: '15px'} : {marginRight: '15px'}}\n              />\n              <div className={`chat-bubble ${isUser ? 'is-user' : 'is-other'}`}>\n                {renderName}\n                <div\n                  className='message'\n                  style={{color: isUser ? '#FFF' : '#2D313F'}}>\n                  {message.text}\n                </div>\n              </div>\n            </div>\n          );\n        }\n      });\n    }\n    return chatContent;\n  }\n}\n\nexport default MessageList;\n"]},"metadata":{},"sourceType":"module"}