{"ast":null,"code":"var _jsxFileName = \"/Users/julee/Desktop/GitHub/safe_space/client/src/components/components_Chat/Chat.js\";\nimport React from 'react';\nimport MessageList from './MessageList';\nimport PropTypes from 'prop-types';\n\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSendMessage = event => {\n      event.preventDefault();\n      const {\n        message\n      } = this.state;\n      this.props.onSubmit(message);\n      this.setState({\n        message: ''\n      });\n    };\n\n    this.scrollToBottom = () => {\n      const chat = document.getElementById('end-of-chat');\n      chat.scrollIntoView();\n    };\n\n    this.state = {\n      message: ''\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.message !== this.state.message && this.props.typingListener) {\n      this.props.typingListener();\n    }\n\n    this.scrollToBottom();\n  }\n\n  render() {\n    let {\n      messages,\n      isLoading,\n      user,\n      renderMessage\n    } = this.props;\n    let {\n      message\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"msg-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MessageList, {\n      isLoading: isLoading,\n      messages: messages,\n      user: user,\n      renderMessage: renderMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat-box-bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, this.props.typingIndicator ? this.props.typingIndicator : '', /*#__PURE__*/React.createElement(\"div\", {\n      id: \"end-of-chat\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"msg-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"message-form\",\n      onSubmit: this.handleSendMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control message-input\",\n      placeholder: \"Type something\",\n      value: message,\n      onChange: event => this.setState({\n        message: event.target.value\n      }),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    })))));\n  }\n\n}\n\nChat.propTypes = {\n  messages: PropTypes.array,\n  onSubmit: PropTypes.func,\n  isLoading: PropTypes.bool,\n  user: PropTypes.object,\n  renderMessage: PropTypes.func,\n  typingListener: PropTypes.func,\n  typingIndicator: PropTypes.element\n};\nChat.defaultProps = {\n  messages: [],\n  user: {\n    \"uid\": \"user1\"\n  },\n  isLoading: false,\n  onSubmit: message => console.log(message)\n};\nexport default Chat;","map":{"version":3,"sources":["/Users/julee/Desktop/GitHub/safe_space/client/src/components/components_Chat/Chat.js"],"names":["React","MessageList","PropTypes","Chat","Component","constructor","props","handleSendMessage","event","preventDefault","message","state","onSubmit","setState","scrollToBottom","chat","document","getElementById","scrollIntoView","componentDidUpdate","prevProps","prevState","typingListener","render","messages","isLoading","user","renderMessage","typingIndicator","target","value","propTypes","array","func","bool","object","element","defaultProps","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAcnBC,iBAdmB,GAcCC,KAAK,IAAI;AAC3BA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAM;AAACC,QAAAA;AAAD,UAAY,KAAKC,KAAvB;AACA,WAAKL,KAAL,CAAWM,QAAX,CAAoBF,OAApB;AACA,WAAKG,QAAL,CAAc;AAACH,QAAAA,OAAO,EAAE;AAAV,OAAd;AACD,KAnBkB;;AAAA,SAqBnBI,cArBmB,GAqBF,MAAM;AACrB,YAAMC,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAb;AACAF,MAAAA,IAAI,CAACG,cAAL;AACD,KAxBkB;;AAEjB,SAAKP,KAAL,GAAa;AACXD,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAEDS,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvC,QAAIA,SAAS,CAACX,OAAV,KAAsB,KAAKC,KAAL,CAAWD,OAAjC,IAA4C,KAAKJ,KAAL,CAAWgB,cAA3D,EAA2E;AACzE,WAAKhB,KAAL,CAAWgB,cAAX;AACD;;AACD,SAAKR,cAAL;AACD;;AAcDS,EAAAA,MAAM,GAAG;AACP,QAAI;AAACC,MAAAA,QAAD;AAAWC,MAAAA,SAAX;AAAsBC,MAAAA,IAAtB;AAA4BC,MAAAA;AAA5B,QAA6C,KAAKrB,KAAtD;AACA,QAAI;AAACI,MAAAA;AAAD,QAAY,KAAKC,KAArB;AAEA,wBACQ;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AACE,MAAA,SAAS,EAAEc,SADb;AAEE,MAAA,QAAQ,EAAED,QAFZ;AAGE,MAAA,IAAI,EAAEE,IAHR;AAIE,MAAA,aAAa,EAAEC,aAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAOE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAKrB,KAAL,CAAWsB,eAAX,GAA2B,KAAKtB,KAAL,CAAWsB,eAAtC,GAAsD,EAD1D,eAEE;AAAK,MAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAPF,CADF,eAaE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,QAAQ,EAAE,KAAKrB,iBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAC,4BAFZ;AAGE,MAAA,WAAW,EAAC,gBAHd;AAIE,MAAA,KAAK,EAAEG,OAJT;AAKE,MAAA,QAAQ,EAAEF,KAAK,IAAI,KAAKK,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAEF,KAAK,CAACqB,MAAN,CAAaC;AAAxB,OAAd,CALrB;AAME,MAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAHF,CADF,CAbF,CADR;AAgCD;;AA/DgC;;AAkEnC3B,IAAI,CAAC4B,SAAL,GAAiB;AACfP,EAAAA,QAAQ,EAAEtB,SAAS,CAAC8B,KADL;AAEfpB,EAAAA,QAAQ,EAAEV,SAAS,CAAC+B,IAFL;AAGfR,EAAAA,SAAS,EAAEvB,SAAS,CAACgC,IAHN;AAIfR,EAAAA,IAAI,EAAExB,SAAS,CAACiC,MAJD;AAKfR,EAAAA,aAAa,EAAEzB,SAAS,CAAC+B,IALV;AAMfX,EAAAA,cAAc,EAAEpB,SAAS,CAAC+B,IANX;AAOfL,EAAAA,eAAe,EAAE1B,SAAS,CAACkC;AAPZ,CAAjB;AAUAjC,IAAI,CAACkC,YAAL,GAAoB;AAClBb,EAAAA,QAAQ,EAAE,EADQ;AAElBE,EAAAA,IAAI,EAAE;AACJ,WAAO;AADH,GAFY;AAKlBD,EAAAA,SAAS,EAAE,KALO;AAMlBb,EAAAA,QAAQ,EAAGF,OAAD,IAAa4B,OAAO,CAACC,GAAR,CAAY7B,OAAZ;AANL,CAApB;AASA,eAAeP,IAAf","sourcesContent":["import React from 'react';\nimport MessageList from './MessageList';\nimport PropTypes from 'prop-types';\n\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: '',\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.message !== this.state.message && this.props.typingListener) {\n      this.props.typingListener();\n    }\n    this.scrollToBottom();\n  }\n\n  handleSendMessage = event => {\n    event.preventDefault();\n    const {message} = this.state;\n    this.props.onSubmit(message);\n    this.setState({message: ''});\n  };\n\n  scrollToBottom = () => {\n    const chat = document.getElementById('end-of-chat');\n    chat.scrollIntoView();\n  };\n\n  render() {\n    let {messages, isLoading, user, renderMessage} = this.props;\n    let {message} = this.state;\n\n    return (\n            <div className='chat-box'>\n              <div className='msg-page'>\n                <MessageList\n                  isLoading={isLoading}\n                  messages={messages} \n                  user={user}\n                  renderMessage={renderMessage}\n                />\n                <div className='chat-box-bottom'>\n                  { this.props.typingIndicator?this.props.typingIndicator:'' }\n                  <div id='end-of-chat'></div>\n                </div>\n              </div>\n              <div className='msg-footer'>\n                <form\n                  className='message-form'\n                  onSubmit={this.handleSendMessage}>\n                  <div className='input-group'>\n                    <input\n                      type='text'\n                      className='form-control message-input'\n                      placeholder='Type something'\n                      value={message}\n                      onChange={event => this.setState({ message: event.target.value})}\n                      required\n                    />\n                  </div>\n                </form>\n              </div>\n            </div>\n    );\n  }\n}\n\nChat.propTypes = {\n  messages: PropTypes.array,\n  onSubmit: PropTypes.func,\n  isLoading: PropTypes.bool,\n  user: PropTypes.object,\n  renderMessage: PropTypes.func,\n  typingListener: PropTypes.func,\n  typingIndicator: PropTypes.element,\n};\n\nChat.defaultProps = {\n  messages: [],\n  user: {\n    \"uid\": \"user1\"\n  },\n  isLoading: false,\n  onSubmit: (message) => console.log(message)\n};\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}